// shared/ui/DateInput/DateInput.tsx
import { classNames } from '@/shared/lib/classNames/classNames';
import cls from './InputDate.module.scss';
import { memo, useCallback, useRef, useState } from 'react';
import CalendarIcon from "../../../shared/assets/icons/calendar.svg"

interface DateInputProps {
    className?: string;
    value?: string;
    onChange: (value: string) => void;
    placeholder?: string;
}

export const InputDate = memo((props: DateInputProps) => {
    const {
        className,
        value = '',
        onChange,
        placeholder = '–¥–¥.–º–º.–≥–≥–≥–≥'
    } = props;

    const [showNative, setShowNative] = useState(false);
    const nativeInputRef = useRef<HTMLInputElement>(null);

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∏–∫–µ—Ä –¥–∞—Ç—ã
    const openNativePicker = useCallback(() => {
        setShowNative(true);
        
        // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ —Ä–µ–Ω–¥–µ—Ä –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ input –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –ø–∏–∫–µ—Ä–∞
        setTimeout(() => {
            if (nativeInputRef.current) {
                nativeInputRef.current.showPicker?.();
            }
        }, 100);
    }, []);

    const handleNativeChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {
        onChange(e.target.value);
        setShowNative(false);
    }, [onChange]);

    const handleNativeBlur = useCallback(() => {
        setShowNative(false);
    }, []);

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const displayDate = value 
        ? new Date(value).toLocaleDateString('ru-RU')
        : '';

    return (
        <div className={classNames(cls.DateInput, {}, [className])}>
            {/* –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
            <input
                type="text"
                className={cls.textInput}
                placeholder={placeholder}
                value={displayDate}
                onFocus={openNativePicker} // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∏–∫–µ—Ä –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
                readOnly
            />
            
            {/* –ö–Ω–æ–ø–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è - –≤–∏–¥–Ω–∞ –≤—Å–µ–≥–¥–∞ */}
            <button
                type="button"
                className={cls.pickerButton}
                onClick={openNativePicker}
                aria-label="–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É"
            >
                {/* üìÖ */}
                <CalendarIcon/>
            </button>

            {/* –°–∫—Ä—ã—Ç—ã–π –Ω–∞—Ç–∏–≤–Ω—ã–π input –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã */}
            {showNative && (
                <input
                    ref={nativeInputRef}
                    type="date"
                    value={value}
                    onChange={handleNativeChange}
                    onBlur={handleNativeBlur}
                    className={cls.nativeInput}
                    min="1900-01-01"
                    max="2025-12-31"
                    autoFocus
                />
            )}
        </div>
    );
});