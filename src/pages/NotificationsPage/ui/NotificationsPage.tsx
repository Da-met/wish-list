import cls from './NotificationsPage.module.scss';
import { useParams } from 'react-router-dom';
import { Page } from '@/widgets/Page/Page';
import { Text } from '@/shared/ui/Text/Text';
import { useSelector } from 'react-redux';
import { getUserAuthData } from '@/entities/User';
import { useEffect, useState } from 'react';
import { getFriends } from '@/pages/FriendsPage/model/slice/friendsPageSlice';
import dayjs from 'dayjs';
import { Friend } from '@/pages/FriendsPage';
import { SeoHead } from '@/shared/ui/SeoHead/SeoHead';
import { APP_NAME } from '@/shared/config/appName/appName';


interface NotificationsPageProps {
    className?: string;
}

export const commonHolidays = [
    { name: "–ù–æ–≤—ã–π –≥–æ–¥", date: "01-01" },
    { name: "–†–æ–∂–¥–µ—Å—Ç–≤–æ", date: "01-07" },
    { name: "–î–µ–Ω—å –∑–∞—â–∏—Ç–Ω–∏–∫–∞ –û—Ç–µ—á–µ—Å—Ç–≤–∞", date: "02-23" },
    { name: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –¥–µ–Ω—å", date: "03-08" },
    { name: "–î–µ–Ω—å —Ç—Ä—É–¥–∞", date: "05-01" },
    { name: "–î–µ–Ω—å –ü–æ–±–µ–¥—ã", date: "05-09" },
    { name: "–î–µ–Ω—å –†–æ—Å—Å–∏–∏", date: "06-12" },
    { name: "–î–µ–Ω—å –∑–Ω–∞–Ω–∏–π", date: "09-01" },
    { name: "–î–µ–Ω—å —É—á–∏—Ç–µ–ª—è", date: "10-05" },
    { name: "–î–µ–Ω—å –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –µ–¥–∏–Ω—Å—Ç–≤–∞", date: "11-04" },
    { name: "–î–µ–Ω—å –°–≤—è—Ç–æ–≥–æ –í–∞–ª–µ–Ω—Ç–∏–Ω–∞", date: "02-14" },
];

  
interface UpcomingEvent {
    type: 'birthday' | 'holiday';
    date: dayjs.Dayjs;
    text: string;
}



const NotificationsPage = ({className}: NotificationsPageProps) => {

    const { id } = useParams<{id: string}>();
    if (!id) {
        return <Text text='–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' />;
    }

    const user = useSelector(getUserAuthData);
    const friends: Friend[] = useSelector(getFriends.selectAll);
    const [events, setEvents] = useState<UpcomingEvent[]>([]);

    useEffect(() => {
        const now = dayjs();
        const result: UpcomingEvent[] = [];
            
        // –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è
        friends.forEach((friend: Friend) => {
            if (!friend.birthday) return;
            const birthday = dayjs(friend.birthday).year(now.year());
            const daysDiff = birthday.diff(now, 'day');
            if (daysDiff >= 0 && daysDiff <= 10) {
            result.push({
                type: 'birthday',
                date: birthday,
                text: `üéÇ –£ ${friend.name} –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ ${daysDiff} –¥–Ω–µ–π`,
            });
            }
        });

        // –û–±—â–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏
        commonHolidays.forEach((holiday) => {
            const holidayDate = dayjs(`${now.year()}-${holiday.date}`);
            const daysDiff = holidayDate.diff(now, 'day');
            if (daysDiff >= 0 && daysDiff <= 10) {
            result.push({
                type: 'holiday',
                date: holidayDate,
                text: `üéâ –°–∫–æ—Ä–æ ${holiday.name} ‚Äî —á–µ—Ä–µ–∑ ${daysDiff} –¥–Ω–µ–π`,
            });
            }
        });

        setEvents(result.sort((a, b) => a.date.diff(b.date)));
      }, [friends]);


    return (
        <>
            <SeoHead
                title={`–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è ‚Äî ${APP_NAME}`}
                description={`
                    –°–º–æ—Ç—Ä–∏—Ç–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –¥—Ä—É–∑–µ–π –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–±–ª–∏–∂–∞—é—Ç—Å—è. 
                    –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –ø–æ–¥–∞—Ä–∫–∏ –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –±–ª–∏–∑–∫–∏—Ö.
                `}
                url={`https://vishi.ru/notifications/${id}`}
                image="/images/preview-events.jpg"
            />
            <Page >
                {/* <div className={cls.profilePageModule}>
                    –ö–ê–õ–ï–ù–î–ê–†–¨
                </div> */}
                <div className={cls.wrapper}>
                    <Text title={'–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è'} className={cls.title} titleTag="h1"/>

                    <ul className={cls.listEvent}>
                        {events.length === 0 && <p className={cls.p}>–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç ‚ú®</p>}
                        {events.map((event, idx) => (
                        <li className={cls.eventLi} key={idx}>{event.text}</li>
                        ))}
                    </ul>
                </div>
                
            </Page>
        </>
    )
}

export default NotificationsPage;

