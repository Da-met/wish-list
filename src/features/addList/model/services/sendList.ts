import { createAsyncThunk } from "@reduxjs/toolkit";
import { StateSchema, ThunkConfig } from "@/app/providers/StoreProvider";

import { getUserAuthData, User, userActions } from "@/entities/User";
import { List } from "@/entities/Sheets";
import { getAddListName } from "../selectors/addListSelectors";


export const sendList = createAsyncThunk<
    List,
    void, 
    ThunkConfig<string>
>(
    'addSheet/sendList',
    async ( authData, ThunkApi ) => {
        const { extra, rejectWithValue, getState } = ThunkApi;
        // –ü–†–ê–í–ò–õ–¨–ù–´–ô –°–ü–û–°–û–ë –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        const state = getState() as StateSchema;
        const userData = getUserAuthData(getState());
        const listName = getAddListName(getState());

        console.log('üìù Creating list with state:', { 
            userData, 
            listName,
            fullState: state.addSheet 
        });
   
        if (!userData) {
            console.log('‚ùå No user data');
            return rejectWithValue('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        }
        if (!listName || listName.trim() === '') {
            console.log('‚ùå No list name');
            return rejectWithValue('–ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
        }

        try {
            const response = await extra.api.post<List>('/lists/add', {
                name: listName,
                user_id: userData.id,
            });

            console.log('‚úÖ List created:', response.data);
            return response.data;
        } catch (error) {
            console.log('üí• Error creating list:', error);
            return rejectWithValue('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª–∏—Å—Ç–∞');
        }
    }
)
